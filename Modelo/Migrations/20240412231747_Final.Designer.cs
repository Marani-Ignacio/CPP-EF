// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240412231747_Final")]
    partial class Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelo.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Categorias", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaID = 1,
                            Codigo = "ADI",
                            Nombre = "Adidas"
                        },
                        new
                        {
                            CategoriaID = 2,
                            Codigo = "NIK",
                            Nombre = "Nike"
                        });
                });

            modelBuilder.Entity("Modelo.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Talle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Productos", (string)null);

                    b.HasData(
                        new
                        {
                            ProductoID = 1,
                            CategoriaID = 1,
                            Codigo = 1,
                            Nombre = "Remera",
                            Talle = "XL"
                        },
                        new
                        {
                            ProductoID = 2,
                            CategoriaID = 2,
                            Codigo = 2,
                            Nombre = "Zapatillas",
                            Talle = ""
                        });
                });

            modelBuilder.Entity("Modelo.Proveedor", b =>
                {
                    b.Property<int>("ProveedorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoID")
                        .HasColumnType("int");

                    b.HasKey("ProveedorID");

                    b.HasIndex("Cuit")
                        .IsUnique();

                    b.HasIndex("ProductoID");

                    b.ToTable("Proveedores", (string)null);

                    b.HasData(
                        new
                        {
                            ProveedorID = 1,
                            Apellido = "Marani",
                            Cuit = "20-42701181-0",
                            Nombre = "Ignacio"
                        },
                        new
                        {
                            ProveedorID = 2,
                            Apellido = "Marani",
                            Cuit = "20-45951202-3",
                            Nombre = "Santiago"
                        });
                });

            modelBuilder.Entity("Modelo.Producto", b =>
                {
                    b.HasOne("Modelo.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Modelo.Proveedor", b =>
                {
                    b.HasOne("Modelo.Producto", null)
                        .WithMany("Proveedores")
                        .HasForeignKey("ProductoID");
                });

            modelBuilder.Entity("Modelo.Producto", b =>
                {
                    b.Navigation("Proveedores");
                });
#pragma warning restore 612, 618
        }
    }
}
